name: Rust Build and Release

on:
  push:
    branches:
      - main
      - feature/adding_release_description

permissions:
  contents: write

jobs:
  release:
    runs-on: windows-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    # - name: Set up Rust
    #   uses: actions-rs/toolchain@v1
    #   with:
    #     toolchain: stable
    #     override: true

    # - name: Build
    #   uses: actions-rs/cargo@v1
    #   with:
    #     command: build
    #     args: --release

    # - name: Create ZIP
    #   shell: pwsh
    #   run: |
    #     $compress = @{
    #       Path = "./target/release/game.exe", "./assets"
    #       CompressionLevel = "Fastest"
    #       DestinationPath = "./target/release/my_release.zip"
    #     }
    #     Compress-Archive @compress

    - name: Get version
      id: get_version
      run: |
        $version = (Select-String -Pattern '^version = "' -Path Cargo.toml).Line -replace 'version = "', '' -replace '"', ''
        "VERSION=$version" >> $env:GITHUB_ENV
        Write-Host $env:VERSION

    - name: Create Git tag
      run: |
        git tag $env:VERSION
        git push origin $env:VERSION

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.VERSION }}
        release_name: Release ${{ env.VERSION }}
        body_path: RELEASE_NOTES.md
        draft: false
        prerelease: false

    # - name: Upload Release
    #   uses: actions/upload-release-asset@v1
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #   with:
    #     upload_url: ${{ steps.create_release.outputs.upload_url }}
    #     asset_path: .\target\release\my_release.zip
    #     asset_name: release.zip
    #     asset_content_type: application/zip
